/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      h;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 0 0 0 0 0];

internalField   uniform -0.30;

boundaryField
{
    front
    {
        type            empty;
    }

    back
    {
        type            empty;
    }

    right
    {
  	type		empty;
    }

    left
    {
  	type		empty;
    }

    top
    {
        // Set to -1.0 for a NO-FLOW condition
        // Set to 0.0 for a unit gradient drain
        type        fixedGradient;
        gradient    uniform 0.0;

        // type    fixedValue;
        // value   uniform 0.0;

        
        /*
        Rosenzweig (2011) Thesis
        ------------
        Flow rate               Q   = 1 mL/min = 1.67E-8 m³/s
        Hyd. conduct.           Ks  = 1.24 cm/min = 2.067E-4 m/s
                                K(h =-0.30) = 9.83E-5 m/s
        Diameter                D   = 8.0 cm = 0.08 m
        Cross-area              A   = π*D²/4
                                    = π*(0.08)²/4 = 5.026E-3 m²
        Darcy vel.               q  = Q/A
                                    = 1.67E-8 m³/s / 5.026E-3 m² = 3.32E-6 m/s

        -------
        Darcy Law - if no clogging and saturated
            q = - Ks • grad(h)
            3.32E-6 m/s = 2.067E-4 m/s • grad(h);
            grad(h) = 0.04345  [Check if this value was calculated by the code below!]

        */

        //- ♣ Fixed Darcy Flux

    //     type            codedMixed;
    //     refValue        uniform 0;
    //     refGradient     uniform 0;
    //     valueFraction   uniform 0;          // If 0: fixedGradient, if 1: fixedValue
    //     name            DarcyInflux;        // name of generated BC

    //     code
    //     #{
    //         // Read the hydraulic conductivity field
    //         const volScalarField& myK = this->db().objectRegistry::lookupObject<volScalarField>("hydraulicCond");
            
    //         // Access the current value of time
    //         const scalar t = this->db().time().value(); 
    
    //         // Specify the target Darcy flow velocity
    //         dimensionedScalar targetDarcyFlow 
    //         (
    //             "targetDarcyFlow",
    //             dimensionSet(0,1,-1,0,0,0,0),
    //             scalar(-3.32E-6) //Negative means inwards
    //         );

    //         int my_i = 0;
    //         // Assign the corresponding gradient to each boundary face
    //         forAll(patch(), faceI)
    //         { 
    //             if( t > 86400.0 ){
    //                 this->refGrad()[faceI] = -1.0;
    //                 this->valueFraction() = 1.0;
    //             }

    //             else{
    //                 Info << (t > 86400) ;
    //                 this->refValue()[faceI] = 0.05;
    //                 this->valueFraction() = 0.0;
    //             }
    //             // else{
    //             //     Info << "Hydraulic conductivity at the patch is " << myK[faceI] << endl;
    //             //     Info << "Target Darcy flow is " << targetDarcyFlow.value() << endl;
    //             //     Info << my_i <<endl;
    //             //     my_i++;
    //             //     this->refGrad()[faceI] = targetDarcyFlow.value() / myK[faceI];
    //             // }
                    
    //             Info << "grad(h) " << this->refGrad()[faceI] << endl;

    //         }

    //         //this->refGrad() = Zero;
    //         //this->valueFraction() = 1.0;
    //     #};
    // }

    bottom
    {
        // Set to -1.0 for a NO-FLOW condition
        // Set to 0.0 for a unit gradient drain
        type        fixedGradient;
        gradient    uniform 0.0;

        // type    fixedValue;
        // value   uniform 0.0;

    }
}

// ************************************************************************* //
